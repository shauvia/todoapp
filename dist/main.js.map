{"version":3,"file":"main.js","mappings":"mBAAA,MAAMA,EAAM,GACNC,EAAQ,SACRC,EAAW,SACjB,IAAIC,EAAO,GAmBX,SAASC,EAAgBC,GACvB,IAAIC,EAAKC,SAASC,eAAe,YACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAI,CACpC,IAAIE,EAAKJ,SAASK,cAAc,MAC5BC,EAAQN,SAASK,cAAc,SACnCC,EAAMC,aAAa,OAAQ,YAC3B,IAAIC,EAAQR,SAASK,cAAc,SACnCG,EAAMC,UAAYX,EAAMI,GAAGQ,SAC3BC,QAAQC,IAAI,+BAAgCd,EAAMI,GAAGQ,UACrDJ,EAAMO,QAAUf,EAAMI,GAAGW,QACzBF,QAAQC,IAAI,sCAAuCd,EAAMI,GAAGW,SAC5D,IAAIC,EAAShB,EAAMI,GAAGY,OACtBH,QAAQC,IAAI,yBAAyBE,GACrC,IAAIC,EAAeC,MAAOC,IACxBN,QAAQC,IAAI,0BAA2BnB,EAAIC,EAAME,EAAKD,EAASmB,EAAOR,EAAMO,eACtEK,EAAiBzB,EAAKC,EAAOC,EAAUmB,EAAQR,EAAMO,QAASjB,EAAK,EAE3EU,EAAMa,iBAAiB,QAASJ,GAChC,IAAIK,EAASpB,SAASK,cAAc,UACpCe,EAAOC,UAAUC,IAAI,cACrB,IAAIC,EAAgBvB,SAASK,cAAc,QAC3CkB,EAAcF,UAAUC,IAAI,MAAO,aAAc,WAAY,iBAC7D,IAAIE,EAAuBxB,SAASK,cAAc,QAClDmB,EAAqBH,UAAUC,IAAI,MAAO,mBAAoB,WAAY,yBAC1E,IAAIG,EAAgBT,MAAOU,UACnBC,EAAWlC,EAAKC,EAAOC,EAAUmB,EAAQlB,GAC/CgC,IAEA/B,QADqBgC,EAASpC,EAAKC,EAAOC,EAAUC,GAC3B,EAE3BwB,EAAOD,iBAAiB,QAAUM,GAClCrB,EAAG0B,YAAYxB,GACfF,EAAG0B,YAAYtB,GACfY,EAAOU,YAAYP,GACnBH,EAAOU,YAAYN,GACnBpB,EAAG0B,YAAYV,GACfrB,EAAG+B,YAAY1B,EACjB,CACF,CAEAY,eAAeW,EAAWlC,EAAKC,EAAOC,EAAUoC,EAASC,GACvDrB,QAAQC,IAAI,iCAAiCnB,EAAIC,EAAMC,EAASoC,GAChE,IAAIE,QAAiBC,MAAMzC,EAAIC,EAAMC,EAAS,IAAIoC,EAAS,CACzDI,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBC,KAAKC,UAAUN,MAGpC,IAAKC,EAASM,GAAI,CAEhB,MADY,IAAIC,MAAM,8CAAiDP,EAASQ,OAAQ,yBAA4BR,EAASS,WAE/H,CACF,CAEA1B,eAAeE,EAAiBzB,EAAKC,EAAOC,EAAUmB,EAAQ2B,EAAQT,GACpErB,QAAQC,IAAK,6BAA8B6B,GAE3C,MAAOE,EAAe,CACpBC,YAAaH,GAGf9B,QAAQC,IAAI,8BAA+BnB,EAAIC,EAAMC,EAASmB,GAE9D,IAAImB,QAAiBC,MAAMzC,EAAIC,EAAMC,EAAS,IAAImB,EAAQ,CACxDqB,OAAQ,OACRU,KAAMR,KAAKC,UAAUK,GACrBP,QAAS,CACP,eAAgB,mBAChB,cAAiBC,KAAKC,UAAUN,MAGpC,IAAKC,EAASM,GAAI,CAEhB,MADU,IAAIC,MAAM,oDAAuDP,EAASQ,OAAQ,yBAA4BR,EAASS,WAEnI,CACA,IAAII,QAAgBb,EAASc,OAE7B,OADApC,QAAQC,IAAI,mBAAoBkC,GACzBA,CACT,CAQA,SAASlB,IACP,IAAI7B,EAAKC,SAASC,eAAe,YACjC,KAAOF,EAAGiD,YACRjD,EAAGkD,YAAYlD,EAAGiD,WAEtB,CAsBAhC,eAAea,EAASpC,EAAKC,EAAOC,EAAUqC,GAC5CrB,QAAQC,IAAI,WAAYlB,EAAOsC,EAAOrC,GACtC,IAAIsC,QAAiBC,MAAMzC,EAAIC,EAAMC,EAAU,CAC7CwC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBC,KAAKC,UAAUN,MAGpC,IAAKC,EAASM,GAAI,CAEhB,MADU,IAAIC,MAAM,4CAA+CP,EAASQ,OAAQ,yBAA4BR,EAASS,WAE3H,CACA,IAAII,QAAgBb,EAASiB,OAE7B,OADAvC,QAAQC,IAAI,iBAAkBkC,GACvBA,CACT,CAEA9B,eAAemC,EAAkBlC,GAC/BmC,GAIF,CAGApC,eAAeqC,EAAepC,GAC5B,MAAMqC,EAAYtD,SAASC,eAAe,QAAQsD,MAElD,GADA5C,QAAQC,IAAI,OAAQ0C,IACfA,GAAyB,IAAZA,EAEhB,YApJFtD,SAASC,eAAe,YAAYQ,UAAY,iBAsJhD,MAAM+C,EAjKY,CAChBC,SAgK+BH,GA1JjCtD,SAASC,eAAe,QAAQsD,MAAQ,SAqG1CvC,eAAuBvB,EAAKC,EAAOC,EAAU+D,EAAQ1B,GACnDrB,QAAQC,IAAI,UAAWlB,EAAOgE,EAAQ1B,GAEtC,IAAIC,QAAiBC,MAAMzC,EAAIC,EAAMC,EAAU,CAC7CwC,OAAQ,OACRU,KAAMR,KAAKC,UAAUoB,GACrBtB,QAAS,CACP,eAAgB,mBAChB,cAAiBC,KAAKC,UAAUN,MAGpC,IAAKC,EAASM,GAEZ,MADU,IAAIC,MAAM,2CAA8CP,EAASQ,OAAQ,yBAA4BR,EAASS,YAG1H,IAAII,QAAgBb,EAASc,OAE7B,OADApC,QAAQC,IAAI,iBAAkBkC,GACvBA,CACT,CAqCQa,CAAQlE,EAAKC,EAAOC,EAAU6D,EAAU5D,GAC9Ce,QAAQC,IAAI,KACZ,IAAIgD,QAAoB/B,EAASpC,EAAKC,EAAOC,EAAUC,GACvDe,QAAQC,IAAI,cAAegD,GAC3BhC,IACA/B,EAAgB+D,EAClB,CAGA,SAASC,IACP7D,SAASC,eAAe,kBAAkBQ,UAAY,EACxD,CAOA,SAAS2C,IACPpD,SAASC,eAAe,YAAY6D,MAAMC,QAAU,OACpD/D,SAASC,eAAe,WAAW6D,MAAMC,QAAQ,MAEnD,CAuBA/C,eAAegD,EAA2B/C,GACtB,UAAdA,EAAMgD,KACRhD,EAAMiD,gBAEV,CA0CAlD,eAAemD,EAAqBlD,GAClC,IAAImD,EAAUpE,SAASC,eAAe,iBAAiBsD,MACnDc,EAAOrE,SAASC,eAAe,aAAasD,MAEhD,GADA5C,QAAQC,IAAI,aAAcwD,IACrBA,GAAqB,IAAVA,EAGd,OAFAP,SACA7D,SAASC,eAAe,kBAAkBQ,UAAY,qCAGxD,IAAK4D,GAAgB,IAARA,GAAcA,EAAKlE,OAAS,EAGvC,OAFA0D,SACA7D,SAASC,eAAe,kBAAkBQ,UAAY,0CAGxD,IAAI6D,QAtDNtD,eAAyBvB,EAAKC,EAAO6E,EAAaC,GAChD,IAAIC,EAAa,CACfC,MAAOH,EACPC,SAAUA,GAERvC,QAAiBC,MAAMzC,EAAMC,EAAO,CACtCyC,OAAQ,MACRU,KAAMR,KAAKC,UAAUmC,GACrBrC,QAAS,CACP,eAAgB,sBAGpB,IAAKH,EAASM,GAEZ,MADU,IAAIC,MAAM,oDAAuDP,EAASQ,OAAQ,yBAA4BR,EAASS,YAInI,aADmBT,EAASiB,MAE9B,CAoCsByB,CAAUlF,EAAKC,EAAO0E,EAASC,GACnD1D,QAAQC,IAAI,8BAA+BlB,EAAO0E,GAClDzD,QAAQC,IAAI,YAAa0D,GA7FzBtE,SAASC,eAAe,iBAAiBsD,MAAQ,GACjDvD,SAASC,eAAe,aAAasD,MAAQ,GA8FxCe,EAAQM,gBAMXf,IACA7D,SAASC,eAAe,kBAAkBQ,UAAY,qCAAuC2D,IAN7FP,IACAT,IACApD,SAASC,eAAe,kBAAkBQ,UAAY,gBAAkB2D,EAAU,oBAMtF,CAEApD,eAAe6D,EAAkB5D,GAC/B,IAAI6D,EAAS9E,SAASC,eAAe,SAASsD,MAC1Cc,EAAOrE,SAASC,eAAe,QAAQsD,MAE3C,GADA5C,QAAQC,IAAK,mBAAoBkE,IAC5BA,GAAmB,IAATA,EAGb,OAFAjB,SACA7D,SAASC,eAAe,kBAAkBQ,UAAY,0BAGxD,IAAK4D,GAAgB,IAARA,GAAcA,EAAKlE,OAAS,EAGvC,OAFA0D,SACA7D,SAASC,eAAe,kBAAkBQ,UAAY,0CAGxD,IAAIsE,QA/DN/D,eAAwBvB,EAAKC,EAAOsF,EAAOR,GACzC,IAAIC,EAAa,CACfC,MAAOM,EACPR,SAAUA,GAERvC,QAAiBC,MAAMzC,EAAMC,EAAO,CACtCyC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBC,KAAKC,UAAUmC,MAGpC,IAAKxC,EAASM,GAEZ,MADU,IAAIC,MAAM,mDAAsDP,EAASQ,OAAQ,yBAA4BR,EAASS,YAIlI,aADoBT,EAASiB,MAE/B,CA6CwB+B,CAASxF,EAAKC,EAAOoF,EAAQT,GACnD1D,QAAQC,IAAI,8BAA+BmE,EAAUG,WA9GrDlF,SAASC,eAAe,SAASsD,MAAQ,GACzCvD,SAASC,eAAe,QAAQsD,MAAQ,GA+GnCwB,EAAUG,WAIbtF,EAAOmF,EAAU/C,MACjBrB,QAAQC,IAAI,eAAgBhB,GAC5BiE,IAjHJ7C,iBACE,IAAImE,QAAiBtD,EAASpC,EAAKC,EAAOC,EAAUC,GACpDgC,IACA/B,EAAgBsF,GAChBnF,SAASC,eAAe,YAAY6D,MAAMC,QAAU,OACpD/D,SAASC,eAAe,WAAW6D,MAAMC,QAAQ,MAEnD,CA4GIqB,KAPAvB,IACA7D,SAASC,eAAe,kBAAkBQ,UAAY,YAAcqE,EAAS,8CASjF,CAGA,SAASO,EAA0BpE,GA/GjCrB,EAAO,GACPwD,IAgHAzC,QAAQC,IAAI,mBAAoBhB,GAChCiE,GAEF,CAIEyB,OAAOnE,iBAAiB,OAAQgC,GAChCnD,SAASC,eAAe,iBAAiBkB,iBAAiB,UAAW6C,GACrEhE,SAASC,eAAe,aAAakB,iBAAiB,UAAW6C,GACjEhE,SAASC,eAAe,gBAAgBkB,iBAAiB,QAASgD,GAClEnE,SAASC,eAAe,eAAekB,iBAAiB,QAAS0D,GACjE7E,SAASC,eAAe,cAAckB,iBAAiB,QAASkC,GAChErD,SAASC,eAAe,gBAAgBkB,iBAAiB,QAASkE,E","sources":["webpack://todoapp/./src/client/js/app.js"],"sourcesContent":["const url = \"\"; \r\nconst users = \"/users\"\r\nconst tasksApi = \"/tasks\"\r\nlet user = \"\";\r\n// const postTask = \"/task\"\r\n\r\n\r\nfunction gatherUserInput(task){\r\n  const userInput = {\r\n    userTask: task\r\n  }\r\n  return userInput;\r\n}\r\n\r\nfunction clearUserInput(){\r\n  document.getElementById(\"task\").value = \"\";\r\n}\r\n\r\nfunction displayErrorMessage(){\r\n  document.getElementById('errorMsg').innerHTML = \"Task is empty\";\r\n}\r\n\r\nfunction displayTaskList(tasks){\r\n  let ul = document.getElementById('taskList');\r\n  for( let i = 0; i < tasks.length; i++){\r\n    let li = document.createElement(\"li\");\r\n    let input = document.createElement(\"input\");\r\n    input.setAttribute(\"type\", \"checkbox\");\r\n    let label = document.createElement(\"label\")\r\n    label.innerHTML = tasks[i].taskName;\r\n    console.log(\"displayTaskList, task name: \", tasks[i].taskName)\r\n    input.checked = tasks[i].checked; // is suposed to be setting checked status according to the list from server \r\n    console.log(\"displayTaskList, status z servera: \", tasks[i].checked)\r\n    let taskId = tasks[i].taskId;\r\n    console.log(\"displayTaskLis: taskId\",taskId);\r\n    let eventHandler = async (event) => {\r\n      console.log(\"changeStatus, address: \", url+users+user+tasksApi+taskId+input.checked)\r\n      await postStatusChange(url, users, tasksApi, taskId, input.checked, user);\r\n    };\r\n    input.addEventListener('click', eventHandler);\r\n    let button = document.createElement(\"button\");\r\n    button.classList.add(\"btn-delete\");\r\n    let spanDeleteBtn = document.createElement(\"span\");\r\n    spanDeleteBtn.classList.add(\"mdi\", \"mdi-delete\", \"mdi-24px\", \"delete_button\");\r\n    let spanDeleteBtnHovered = document.createElement(\"span\");\r\n    spanDeleteBtnHovered.classList.add(\"mdi\", \"mdi-delete-empty\", \"mdi-24px\", \"delete_button_hovered\")\r\n    let deleteHandler = async (e) => {\r\n      await removeTask(url, users, tasksApi, taskId, user);\r\n      clearTaskList();\r\n      let taskList = await getTasks(url, users, tasksApi, user);\r\n      displayTaskList(taskList);\r\n    }\r\n    button.addEventListener('click',  deleteHandler);\r\n    li.appendChild(input);\r\n    li.appendChild(label);\r\n    button.appendChild(spanDeleteBtn);\r\n    button.appendChild(spanDeleteBtnHovered);\r\n    li.appendChild(button);\r\n    ul.appendChild(li);\r\n  }\r\n}\r\n\r\nasync function removeTask(url, users, tasksApi, taskNum, token){\r\n  console.log(\"removeTask: url, tasks, taskId\",url+users+tasksApi+taskNum);\r\n  let response = await fetch(url+users+tasksApi+'/'+taskNum, { \r\n    method: 'DELETE', \r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\": JSON.stringify(token)\r\n    }\r\n  });\r\n  if (!response.ok) {\r\n    const err = new Error('fetch failed, removeTask, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText); \r\n    throw err;\r\n  }\r\n}\r\n\r\nasync function postStatusChange(url, users, tasksApi, taskId, status, token){\r\n  console.log (\"postStatusChange, status: \", status)\r\n  \r\n  const  inputStatus  = {\r\n    userInpStat: status\r\n  }\r\n\r\n  console.log(\"postStatusChange, address: \", url+users+tasksApi+taskId) \r\n  \r\n  let response = await fetch(url+users+tasksApi+'/'+taskId, { \r\n    method: 'POST' , \r\n    body: JSON.stringify(inputStatus),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\": JSON.stringify(token)\r\n    }\r\n  });\r\n  if (!response.ok) {\r\n    let err = new Error('fetch failed, postStatusChange, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\r\n    throw err;\r\n  }\r\n  let content = await response.text(); // dobranie sie do tresci jest asynchroniczne, trzeba czekac; .json() odd≈ºejsonowuje\r\n  console.log(\"postStatusChange\", content)\r\n  return content;\r\n}\r\n\r\n// async function changeStatus(id, inputStatus){\r\n//   await postStatusChange(url, users, user, tasksApi, id, inputStatus)\r\n// }\r\n\r\n\r\n\r\nfunction clearTaskList(){\r\n  let ul = document.getElementById('taskList');\r\n  while (ul.firstChild) { // code from https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild \r\n    ul.removeChild(ul.firstChild); \r\n  }\r\n}\r\n\r\nasync function addTask(url, users, tasksApi, uInput, token){\r\n  console.log(\"addTask\", users, uInput, token)\r\n  // console.log(\"app.js,addTask URL: \", url+postTask,)\r\n  let response = await fetch(url+users+tasksApi, { \r\n    method: 'POST' , \r\n    body: JSON.stringify(uInput),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\": JSON.stringify(token)\r\n    }\r\n  });\r\n  if (!response.ok) {\r\n    let err = new Error('fetch failed, addTask, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\r\n    throw err;\r\n  }\r\n  let content = await response.text(); // dobranie sie do tresci jest asynchroniczne, trzeba czekac; .json() odd≈ºejsonowuje\r\n  console.log(\"addTaskContent\", content)\r\n  return content;\r\n}\r\n\r\nasync function getTasks(url, users, tasksApi, token){\r\n  console.log('getTasks', users, token, tasksApi);\r\n  let response = await fetch(url+users+tasksApi, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\": JSON.stringify(token)\r\n    }\r\n  });\r\n  if (!response.ok) {\r\n    let err = new Error('fetch failed, getTasks, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\r\n    throw err;\r\n  }\r\n  let content = await response.json();\r\n  console.log(\"getTaskContent\", content)\r\n  return content;\r\n}\r\n \r\nasync function loadWindowHandler(event){\r\n  showHomePage()\r\n  // clearUserInput()\r\n  // let listOfTasks = await getTasks(url, users, user, tasksApi);\r\n  // displayTaskList(listOfTasks);\r\n}\r\n\r\n\r\nasync function addTaskHandler(event){\r\n  const userInput = document.getElementById(\"task\").value;\r\n  console.log(\"task\", userInput);\r\n  if (!userInput || userInput ==\"\"){\r\n    displayErrorMessage()\r\n    return;\r\n  }\r\n  const userData = gatherUserInput(userInput);\r\n  clearUserInput()\r\n  await addTask(url, users, tasksApi, userData, user);\r\n  console.log(\"1\");\r\n  let listOfTasks = await getTasks(url, users, tasksApi, user);\r\n  console.log(\"listOfTasks\", listOfTasks)\r\n  clearTaskList();\r\n  displayTaskList(listOfTasks);\r\n}\r\n\r\n\r\nfunction clearDisplayMessages(){\r\n  document.getElementById('displayMessage').innerHTML = '';\r\n}\r\n\r\nfunction cleanCreateAccInput(){\r\n  document.getElementById('createAccount').value = \"\";\r\n  document.getElementById('loginPass').value = \"\";\r\n}\r\n\r\nfunction showHomePage(){\r\n  document.getElementById(\"homePage\").style.display = \"grid\";\r\n  document.getElementById(\"addTask\").style.display='none';\r\n  // document.getElementById(\"logoutForm\").style.display = 'none';\r\n}\r\n\r\nfunction cleanLogin(){\r\n  document.getElementById('login').value = \"\";\r\n  document.getElementById('pass').value = \"\";\r\n\r\n}\r\n\r\nasync function showFormAndTasksOnLogin(){\r\n  let taskList = await getTasks(url, users, tasksApi, user);\r\n  clearTaskList();\r\n  displayTaskList(taskList);\r\n  document.getElementById(\"homePage\").style.display = \"none\";\r\n  document.getElementById(\"addTask\").style.display='grid';\r\n  // document.getElementById(\"logoutForm\").style.display = 'block';\r\n}\r\n\r\nfunction logOutAcc(){\r\n  user = \"\"\r\n  showHomePage();\r\n  // document.getElementById(\"logoutForm\").style.display = 'none';\r\n}\r\n\r\nasync function preventInputSendingHandler(event){\r\n  if (event.key === \"Enter\") {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\nasync function createAcc(url, users, userAccName, password){\r\n  let credatials = {\r\n    login: userAccName,\r\n    password: password\r\n  }\r\n  let response = await fetch(url + users, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(credatials),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  if (!response.ok) {\r\n    let err = new Error('fetch failed, createAcc failed, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\r\n    throw err;\r\n  }\r\n  let answer = await response.json();\r\n  return answer;\r\n}\r\n\r\nasync function logToAcc(url, users, accId, password) {\r\n  let credatials = {\r\n    login: accId,\r\n    password: password\r\n  }\r\n  let response = await fetch(url + users, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\": JSON.stringify(credatials)\r\n    }\r\n  });\r\n  if (!response.ok) {\r\n    let err = new Error('fetch failed, logToAcc failed, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\r\n    throw err;\r\n  }\r\n  let content = await response.json();\r\n  return content;\r\n}\r\n\r\nasync function createAccountHandler(event){ \r\n  let accName = document.getElementById('createAccount').value;\r\n  let pass = document.getElementById('loginPass').value;\r\n  console.log(\"userName: \", accName)\r\n  if (!accName || accName ==\"\"){\r\n    clearDisplayMessages();\r\n    document.getElementById('displayMessage').innerHTML = 'Account username cannot be empty.'\r\n    return;\r\n  }\r\n  if (!pass || pass == \"\" || pass.length < 5){\r\n    clearDisplayMessages();\r\n    document.getElementById('displayMessage').innerHTML = 'Password must have at least 5 letters.'\r\n    return;\r\n  }\r\n  let account = await createAcc(url, users, accName, pass);\r\n  console.log(\"tripUrl, accUrl, userName: \", users, accName)\r\n  console.log(\"account: \", account);\r\n  cleanCreateAccInput()\r\n  if (!account.alreadyCreated){\r\n    clearDisplayMessages();\r\n    showHomePage();\r\n    document.getElementById('displayMessage').innerHTML = 'Your account ' + accName + ' has been set up.';\r\n    \r\n  } else {\r\n    clearDisplayMessages();\r\n    document.getElementById(\"displayMessage\").innerHTML = \"You have already created account: \" + accName;\r\n  }   \r\n}\r\n\r\nasync function loginToAccHandler(event){\r\n  let userId = document.getElementById('login').value;\r\n  let pass = document.getElementById('pass').value;\r\n  console.log( \"Login user acc: \", userId)\r\n  if (!userId || userId ==\"\"){\r\n    clearDisplayMessages();\r\n    document.getElementById('displayMessage').innerHTML = 'Login cannot be empty.'\r\n    return;\r\n  }\r\n  if (!pass || pass == \"\" || pass.length < 5){\r\n    clearDisplayMessages();\r\n    document.getElementById('displayMessage').innerHTML = 'Password must have at least 5 letters '\r\n    return;\r\n  }\r\n  let accExists = await logToAcc(url, users, userId, pass);\r\n  console.log(\"login, account is created: \", accExists.isCreated)\r\n  cleanLogin()\r\n  if (!accExists.isCreated){\r\n    clearDisplayMessages();\r\n    document.getElementById('displayMessage').innerHTML = 'Account: ' + userId + \" doesn't exist. Please create your account.\"\r\n  } else {\r\n    user = accExists.token;\r\n    console.log(\"logged to : \", user)\r\n    clearDisplayMessages();\r\n    // document.getElementById('jestesZalogowana').innerHTML = 'Jeste≈õ zalogowana, a tu sƒÖ twoje fajoskie wycieczki'\r\n    showFormAndTasksOnLogin();\r\n  }\r\n  \r\n}\r\n\r\n// dopasowaƒá funkcjƒô, do tej apkil\r\nfunction logOutAndClearDispHandler(event){\r\n  logOutAcc();\r\n  console.log('userLogin logout', user);\r\n  clearDisplayMessages();\r\n    \r\n}\r\n\r\nfunction initializeForms() {\r\n  \r\n  window.addEventListener('load', loadWindowHandler);\r\n  document.getElementById('createAccForm').addEventListener(\"keydown\", preventInputSendingHandler)\r\n  document.getElementById('loginForm').addEventListener(\"keydown\", preventInputSendingHandler)\r\n  document.getElementById('createAccBtn').addEventListener('click', createAccountHandler);\r\n  document.getElementById('loginButton').addEventListener('click', loginToAccHandler);\r\n  document.getElementById('addTaskBtn').addEventListener('click', addTaskHandler);\r\n  document.getElementById('logoutButton').addEventListener('click', logOutAndClearDispHandler)\r\n}\r\n\r\n\r\nexport {initializeForms};\r\n"],"names":["url","users","tasksApi","user","displayTaskList","tasks","ul","document","getElementById","i","length","li","createElement","input","setAttribute","label","innerHTML","taskName","console","log","checked","taskId","eventHandler","async","event","postStatusChange","addEventListener","button","classList","add","spanDeleteBtn","spanDeleteBtnHovered","deleteHandler","e","removeTask","clearTaskList","getTasks","appendChild","taskNum","token","response","fetch","method","headers","JSON","stringify","ok","Error","status","statusText","inputStatus","userInpStat","body","content","text","firstChild","removeChild","json","loadWindowHandler","showHomePage","addTaskHandler","userInput","value","userData","userTask","uInput","addTask","listOfTasks","clearDisplayMessages","style","display","preventInputSendingHandler","key","preventDefault","createAccountHandler","accName","pass","account","userAccName","password","credatials","login","createAcc","alreadyCreated","loginToAccHandler","userId","accExists","accId","logToAcc","isCreated","taskList","showFormAndTasksOnLogin","logOutAndClearDispHandler","window"],"sourceRoot":""}